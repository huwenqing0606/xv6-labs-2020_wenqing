Q1: Which registers contain arguments to functions? For example, which register holds 13 in main's call to printf?

A: Register a0 saves teh return value; a1 saves l2; a2 saves l3.

Q2: Where is the call to function f in the assembly code for main? Where is the call to g? 
(Hint: the compiler may inline functions.)

A: function f at line 26 in call.asm, function g at line 13 in call.asm.

Q3: At what address is the function printf located?

A: 0000000000000628 (line 50 at call.asm)

Q4: What value is in the register ra just after the jalr to printf in main?

A: 0x38 

Q5: Run the following code.

	unsigned int i = 0x00646c72;
	printf("H%x Wo%s", 57616, &i);
      
What is the output? Here's an ASCII table that maps bytes to characters.
The output depends on that fact that the RISC-V is little-endian. 
If the RISC-V were instead big-endian what would you set i to in order to yield the same output? 
Would you need to change 57616 to a different value?
Here's a description of little- and big-endian and a more whimsical description.

A: He110 World

Q6: In the following code, what is going to be printed after 'y='? (note: the answer is not a specific value.) Why does this happen?

	printf("x=%d y=%d", 3);

A: 3 random_number